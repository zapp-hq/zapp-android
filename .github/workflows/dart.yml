# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

       # Recommended for Flutter projects: Use subosito/flutter-action
      # This action sets up both Flutter and Dart, and adds `flutter` to the PATH.
      - uses: subosito/flutter-action@v2 # Use the latest stable version
        with:
          # Specify the Flutter version you want to use.
          # You can use 'stable', 'beta', 'dev', or a specific version like '3.22.0'
          flutter-version: 'stable' 
          channel: 'stable' # Specify the channel (stable, beta, dev)

      - name: Install dependencies
        run: flutter pub get

      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        run: flutter analyze

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      - name: Run tests
        run: flutter test
